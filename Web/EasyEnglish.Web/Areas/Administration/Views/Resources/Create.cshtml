@model EasyEnglish.Web.ViewModels.Administration.Resources.ResourceInputModel

@{
    ViewData["Title"] = "Create Resourse";
    var courseTypesItems = this.Model.CourseTypeItems.Select(x => new SelectListItem(x.Value, x.Key));
}

<h1>@this.ViewData["Title"]</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Url" class="control-label"></label>
                <input asp-for="Url" class="form-control" />
                <span asp-validation-for="Url" class="text-danger"></span>
            </div>
           @* @using (Html.BeginForm("Create", "ResourceInputModel", FormMethod.Post)) 
            {
               <div>
                @Html.LabelFor(model => model.CourseTypes)
                @for(var i = 0; i < Model.CourseTypes.Count; i++)
                {    
            
                    @Html.HiddenFor(m => Model.CourseTypes[i].ID)
                    @Html.HiddenFor(m => Model.CourseTypes[i].Description)
                    @Html.CheckBoxFor(m => Model.CourseTypes[i].Checked)
                    @Model.CourseTypes[i].Description<br/>
                 }
                </div>
            <input type="submit" value="Submit" />
            }*@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to All Resources</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
